{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\akash\\\\PycharmProjects\\\\OPOC Login Page\\\\src\\\\pages\\\\SignInWithGoogle.js\";\n// import React, { useEffect } from \"react\";\n// import firebase from \"firebase/compat/app\";\n// import \"firebase/compat/auth\";\n// // import { useNavigate } from \"react-router-dom\";\n// import { firebaseConfig } from \"../firebaseConfig\";\n\n// const SignInWithGoogle = () => {\n//     firebase.initializeApp(firebaseConfig);\n// //   const navigate = useNavigate();    \n//   useEffect(() => {\n//     firebase.initializeApp(firebaseConfig);\n//     firebase.auth().getRedirectResult().then((result) => {\n//       // Handle the authentication result\n//       if (result.user) {\n//         console.log(result.user); // Access user information from result.user\n//         // Redirect or perform necessary actions after successful authentication\n//       }\n//     }).catch((error) => {\n//       // Handle any errors that occur during the authentication process\n//       console.error(error);\n//     });\n//   }, []);\n\n//   return <div>Signing in with Google...</div>;\n// };\n\n// export default SignInWithGoogle;\n\nimport React from \"react\";\nimport firebase from \"firebase/compat/app\";\nimport \"firebase/compat/auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SignInWithGoogle = () => {\n  // Initialize Firebase app\n  if (!firebase.apps.length) {\n    firebase.initializeApp({\n      // Add your Firebase configuration here\n      apiKey: \"AIzaSyBO8DhQvBEeKCAQ_Y3PZ7Fe8WpTupomPnE\",\n      authDomain: \"internle.firebaseapp.com\",\n      projectId: \"internle\",\n      storageBucket: \"internle.appspot.com\",\n      messagingSenderId: \"219631840743\",\n      appId: \"1:219631840743:web:aecfbe9194cb8869f32142\",\n      measurementId: \"G-C6BKREG41K\"\n    });\n  }\n\n  // Handle sign-in with Google\n  const handleSignInWithGoogle = async () => {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    try {\n      await firebase.auth().signInWithPopup(provider);\n      // Handle successful sign-in\n    } catch (error) {\n      // Handle sign-in error\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: handleSignInWithGoogle,\n    children: \"Sign in with Google\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_c = SignInWithGoogle;\nexport default SignInWithGoogle;\nvar _c;\n$RefreshReg$(_c, \"SignInWithGoogle\");","map":{"version":3,"names":["React","firebase","jsxDEV","_jsxDEV","SignInWithGoogle","apps","length","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","handleSignInWithGoogle","provider","auth","GoogleAuthProvider","signInWithPopup","error","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/akash/PycharmProjects/OPOC Login Page/src/pages/SignInWithGoogle.js"],"sourcesContent":["// import React, { useEffect } from \"react\";\r\n// import firebase from \"firebase/compat/app\";\r\n// import \"firebase/compat/auth\";\r\n// // import { useNavigate } from \"react-router-dom\";\r\n// import { firebaseConfig } from \"../firebaseConfig\";\r\n\r\n// const SignInWithGoogle = () => {\r\n//     firebase.initializeApp(firebaseConfig);\r\n// //   const navigate = useNavigate();    \r\n//   useEffect(() => {\r\n//     firebase.initializeApp(firebaseConfig);\r\n//     firebase.auth().getRedirectResult().then((result) => {\r\n//       // Handle the authentication result\r\n//       if (result.user) {\r\n//         console.log(result.user); // Access user information from result.user\r\n//         // Redirect or perform necessary actions after successful authentication\r\n//       }\r\n//     }).catch((error) => {\r\n//       // Handle any errors that occur during the authentication process\r\n//       console.error(error);\r\n//     });\r\n//   }, []);\r\n\r\n//   return <div>Signing in with Google...</div>;\r\n// };\r\n\r\n// export default SignInWithGoogle;\r\n\r\nimport React from \"react\";\r\nimport firebase from \"firebase/compat/app\";\r\nimport \"firebase/compat/auth\";\r\n\r\nconst SignInWithGoogle = () => {\r\n  // Initialize Firebase app\r\n  if (!firebase.apps.length) {\r\n    firebase.initializeApp({\r\n      // Add your Firebase configuration here\r\n      apiKey: \"AIzaSyBO8DhQvBEeKCAQ_Y3PZ7Fe8WpTupomPnE\",\r\n      authDomain: \"internle.firebaseapp.com\",\r\n      projectId: \"internle\",\r\n      storageBucket: \"internle.appspot.com\",\r\n      messagingSenderId: \"219631840743\",\r\n      appId: \"1:219631840743:web:aecfbe9194cb8869f32142\",\r\n      measurementId: \"G-C6BKREG41K\"\r\n    });\r\n  }\r\n\r\n  // Handle sign-in with Google\r\n  const handleSignInWithGoogle = async () => {\r\n    const provider = new firebase.auth.GoogleAuthProvider();\r\n    try {\r\n      await firebase.auth().signInWithPopup(provider);\r\n      // Handle successful sign-in\r\n    } catch (error) {\r\n      // Handle sign-in error\r\n    }\r\n  };\r\n\r\n  return (\r\n    <button onClick={handleSignInWithGoogle}>Sign in with Google</button>\r\n  );\r\n};\r\n\r\nexport default SignInWithGoogle;"],"mappings":";AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,qBAAqB;AAC1C,OAAO,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAC7B;EACA,IAAI,CAACH,QAAQ,CAACI,IAAI,CAACC,MAAM,EAAE;IACzBL,QAAQ,CAACM,aAAa,CAAC;MACrB;MACAC,MAAM,EAAE,yCAAyC;MACjDC,UAAU,EAAE,0BAA0B;MACtCC,SAAS,EAAE,UAAU;MACrBC,aAAa,EAAE,sBAAsB;MACrCC,iBAAiB,EAAE,cAAc;MACjCC,KAAK,EAAE,2CAA2C;MAClDC,aAAa,EAAE;IACjB,CAAC,CAAC;EACJ;;EAEA;EACA,MAAMC,sBAAsB,GAAG,MAAAA,CAAA,KAAY;IACzC,MAAMC,QAAQ,GAAG,IAAIf,QAAQ,CAACgB,IAAI,CAACC,kBAAkB,CAAC,CAAC;IACvD,IAAI;MACF,MAAMjB,QAAQ,CAACgB,IAAI,CAAC,CAAC,CAACE,eAAe,CAACH,QAAQ,CAAC;MAC/C;IACF,CAAC,CAAC,OAAOI,KAAK,EAAE;MACd;IAAA;EAEJ,CAAC;EAED,oBACEjB,OAAA;IAAQkB,OAAO,EAAEN,sBAAuB;IAAAO,QAAA,EAAC;EAAmB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAQ,CAAC;AAEzE,CAAC;AAACC,EAAA,GA7BIvB,gBAAgB;AA+BtB,eAAeA,gBAAgB;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}